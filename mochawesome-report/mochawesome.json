{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2019-08-27T19:15:57.896Z",
    "end": "2019-08-27T19:16:25.472Z",
    "duration": 27576,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "18d69157-9763-45a8-b3a4-20775666ff6d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "90112c25-55f1-43a7-bcd5-33a7eef938d7",
          "title": "Inspira QA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visitar Quem Somos",
              "fullTitle": "Inspira QA Visitar Quem Somos",
              "timedOut": null,
              "duration": 6734,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "a461c8b8-7b69-41af-ade2-b7408270d44c",
              "parentUUID": "90112c25-55f1-43a7-bcd5-33a7eef938d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visitar Carrinho vazio",
              "fullTitle": "Inspira QA Visitar Carrinho vazio",
              "timedOut": null,
              "duration": 5492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "ebeda312-0365-4808-9220-9035a2f4ea3d",
              "parentUUID": "90112c25-55f1-43a7-bcd5-33a7eef938d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visitar Minha Conta deslogado",
              "fullTitle": "Inspira QA Visitar Minha Conta deslogado",
              "timedOut": null,
              "duration": 5948,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6fdc1719-63c5-4926-8219-8fa13de8628b",
              "parentUUID": "90112c25-55f1-43a7-bcd5-33a7eef938d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visitar Fale Conosco",
              "fullTitle": "Inspira QA Visitar Fale Conosco",
              "timedOut": null,
              "duration": 3205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0f52a77d-7293-4d16-bed3-1817737aacc4",
              "parentUUID": "90112c25-55f1-43a7-bcd5-33a7eef938d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a461c8b8-7b69-41af-ade2-b7408270d44c",
            "ebeda312-0365-4808-9220-9035a2f4ea3d",
            "6fdc1719-63c5-4926-8219-8fa13de8628b",
            "0f52a77d-7293-4d16-bed3-1817737aacc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21379,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "overwrite": true,
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "4.0.1"
    }
  }
}