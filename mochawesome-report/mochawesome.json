{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2019-09-04T12:28:32.785Z",
    "end": "2019-09-04T12:28:52.283Z",
    "duration": 19498,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e9df36cd-f778-4cbb-a4df-06c233324ea4",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "603fc338-a47b-415c-941b-863f1203a43f",
          "title": "Inspira QA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visitar Quem Somos",
              "fullTitle": "Inspira QA Visitar Quem Somos",
              "timedOut": null,
              "duration": 4110,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "88087ae1-da60-4589-971c-183cecfa67af",
              "parentUUID": "603fc338-a47b-415c-941b-863f1203a43f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visitar Carrinho vazio",
              "fullTitle": "Inspira QA Visitar Carrinho vazio",
              "timedOut": null,
              "duration": 4068,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "19ea54e0-a40a-46b6-936d-c76df7b35e4e",
              "parentUUID": "603fc338-a47b-415c-941b-863f1203a43f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visitar Minha Conta deslogado",
              "fullTitle": "Inspira QA Visitar Minha Conta deslogado",
              "timedOut": null,
              "duration": 4172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "12c2e58f-c60a-4ab6-8fc9-aba82433e7dd",
              "parentUUID": "603fc338-a47b-415c-941b-863f1203a43f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visitar Fale Conosco",
              "fullTitle": "Inspira QA Visitar Fale Conosco",
              "timedOut": null,
              "duration": 3170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "963f2e99-ca76-49eb-b347-86721c146e7b",
              "parentUUID": "603fc338-a47b-415c-941b-863f1203a43f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88087ae1-da60-4589-971c-183cecfa67af",
            "19ea54e0-a40a-46b6-936d-c76df7b35e4e",
            "12c2e58f-c60a-4ab6-8fc9-aba82433e7dd",
            "963f2e99-ca76-49eb-b347-86721c146e7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "overwrite": true,
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "4.0.1"
    }
  }
}