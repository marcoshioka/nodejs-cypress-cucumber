{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2019-08-26T22:54:07.232Z",
    "end": "2019-08-26T22:54:27.588Z",
    "duration": 20356,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4ff2bf6c-159b-4eea-8194-fb609b687be1",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8473c3ff-c3f7-455d-b8dc-dbc5851fbd5b",
          "title": "Inspira QA",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Visitar Quem Somos",
              "fullTitle": "Inspira QA Visitar Quem Somos",
              "timedOut": null,
              "duration": 4361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de9eecf7-e66b-4e44-b091-33df615f797f",
              "parentUUID": "8473c3ff-c3f7-455d-b8dc-dbc5851fbd5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visitar Carrinho vazio",
              "fullTitle": "Inspira QA Visitar Carrinho vazio",
              "timedOut": null,
              "duration": 3876,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2bdb0f1f-7462-42af-a5d9-6cc13eec59f4",
              "parentUUID": "8473c3ff-c3f7-455d-b8dc-dbc5851fbd5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visitar Minha Conta deslogado",
              "fullTitle": "Inspira QA Visitar Minha Conta deslogado",
              "timedOut": null,
              "duration": 3924,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "c8e68e5e-e697-437d-b7d7-44ece9a12736",
              "parentUUID": "8473c3ff-c3f7-455d-b8dc-dbc5851fbd5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Visitar Fale Conosco",
              "fullTitle": "Inspira QA Visitar Fale Conosco",
              "timedOut": null,
              "duration": 3854,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() => resolveAndRunBeforeHooks.call(this, scenario.tags))\n  .then(() =>\n    indexedSteps.forEach(step => stepTest.call(this, state, step, rowData))\n  )\n  .then(() => resolveAndRunAfterHooks.call(this, scenario.tags))\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "82853f33-7462-4102-b071-989e7607c8b1",
              "parentUUID": "8473c3ff-c3f7-455d-b8dc-dbc5851fbd5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de9eecf7-e66b-4e44-b091-33df615f797f",
            "2bdb0f1f-7462-42af-a5d9-6cc13eec59f4",
            "c8e68e5e-e697-437d-b7d7-44ece9a12736",
            "82853f33-7462-4102-b071-989e7607c8b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16015,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "overwrite": true,
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "4.0.1"
    }
  }
}